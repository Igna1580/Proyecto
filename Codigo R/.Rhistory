# Cambiar los nombres de las regiones en los datos
filtered_data$Region <- nuevos_nombres[filtered_data$Region]
# Crear el gráfico de caja y bigotes con los nuevos nombres de regiones en el eje x
caja_y_bigotes_region <- ggplot(filtered_data, aes(x = Region, y = ladder_score, fill = Region)) +
geom_boxplot(outlier.color = "red") + cowplot::theme_cowplot() +
labs(
y = "Índice de Felicidad",
title = "Gráfico de Caja y Bigotes del Índice de Felicidad por Región",
subtitle = "Considerando el 80% de países con mayor consumo de alcohol"
) +
theme_minimal() +
scale_fill_discrete(name = "Región") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + cowplot::theme_cowplot()  # Inclinar el eje x
caja_y_bigotes_region
# otra version
# Calcular los deciles del consumo de alcohol y asignarlos a una nueva variable
relacion_AlcoholYFelicidad2 <- relacion_AlcoholYFelicidad2 %>%
mutate(decil_alcohol = ntile(both, 10))
# Crear el gráfico de caja y bigotes por deciles de consumo de alcohol
caja_y_bigotes_deciles <- ggplot(relacion_AlcoholYFelicidad2, aes(x = factor(decil_alcohol), y = ladder_score)) +
geom_boxplot(outlier.color = "red") + cowplot::theme_cowplot() +
labs(
x = "Decil de Consumo de Alcohol",
y = "Índice de Felicidad",
title = "Gráfico de Caja y Bigotes del Índice de Felicidad por Decil de Consumo de Alcohol"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0, hjust = 1))  # Inclinar el eje x
# Mostrar el gráfico
print(caja_y_bigotes_deciles)
# Gráfico 6: Índice de Felicidad Promedio por Decil de Consumo de Alcohol
# Calcular el promedio del índice de felicidad para cada decil
promedio_felicidad_por_decil <- relacion_AlcoholYFelicidad2 %>%
group_by(decil_alcohol) %>%
summarize(promedio_felicidad = mean(ladder_score))
# Crear un gráfico de línea con límites personalizados en el eje x
gráfico_Línea <- ggplot(promedio_felicidad_por_decil, aes(x = decil_alcohol, y = promedio_felicidad)) +
geom_line() +
labs(
x = "Decil según promedio del consumo anual en litros de alcohol puro per cápita",
y = "Índice de Felicidad promedio",
title = "Índice de Felicidad promedio según decil de consumo de alcohol"
) +
theme_minimal() +
cowplot::theme_cowplot() +
scale_x_continuous(breaks = 0:10) +  # Establecer límites y marcas en el eje x
theme(
plot.title = element_text(size = 12),  # Tamaño del título
axis.title.x = element_text(size = 10),  # Tamaño del título del eje x
axis.title.y = element_text(size = 10),  # Tamaño del título del eje y
axis.text.x = element_text(size = 10),  # Tamaño del texto del eje x
axis.text.y = element_text(size = 10)   # Tamaño del texto del eje y
)
# Mostrar el gráfico de línea
print(gráfico_Línea)
#ggsave(filename = "grafico_linea.pdf", plot = gráfico_Línea, device = "pdf", width = 8.27, height = 11.69)
# Cuadro 1: Correlación entre Consumo de alcohol y variables de el índice de felicidad
# Variables a analizar
variables_interes <- c("both", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption", "ladder_score")
# Regiones
regiones_unicas <- c(
"Europe",
"Sub-Saharan Africa",
"Asia",
"Australia and Oceania",
"North America",
"South America",
"Central America and the Caribbean",
"Middle East, North Africa, and Greater Arabia"
)
# Crear una lista para almacenar las matrices de correlación por región
correlacion_matrices <- list()
# Bucle para calcular las matrices de correlación por región
for (region in regiones_unicas) {
# Filtrar los datos para la región actual
datos_region <- base_datos %>% filter(region == region)
# Calcular la matriz de correlación
correlacion_matrix <- cor(datos_region[variables_interes], method = "spearman")
# Almacenar la matriz de correlación en la lista
correlacion_matrices[[region]] <- correlacion_matrix
}
# Calcular la matriz de correlación promedio para todas las regiones
correlacion_matrix_general <- matrix(NA, nrow = length(variables_interes), ncol = 1)
colnames(correlacion_matrix_general) <- c("General")
for (i in seq_along(variables_interes)) {
variable <- variables_interes[i]
region_correlacion <- sapply(correlacion_matrices, function(mat) mat[1, i])
correlacion_matrix_general[i, ] <- mean(region_correlacion, na.rm = TRUE)
}
# Crear un data frame con las correlaciones para todas las regiones, incluyendo "General"
correlacion_datos <- data.frame(Variable = variables_interes)
for (region in regiones_unicas) {
region_correlacion <- correlacion_matrices[[region]][1, ]  # Correlaciones de "both" con todas las variables
correlacion_datos[, region] <- region_correlacion
}
# Agregar la columna "General" al data frame
correlacion_datos$General <- correlacion_matrix_general[, "General"]
# Eliminar la fila correspondiente a "both"
correlacion_datos <- correlacion_datos[correlacion_datos$Variable != "both", ]
# Mover la fila "General" al principio
correlacion_datos <- correlacion_datos %>%
arrange(desc(Variable == "General"))
# Mover la fila "ladderscore" al principio
correlacion_datos <- correlacion_datos %>%
arrange(desc(Variable == "ladder_score"))
# Nuevos nombres de las variables
nuevos_nombres <- c("Indice de felicidad", "Seguro Social", "Esperanza de vida saludable", "Libertad para la toma de decisiones", "Generosidad","Percepciones de corrupción")
# Cambiar los nombres de las variables
correlacion_datos <- correlacion_datos %>%
mutate(Variable = nuevos_nombres)
colnames(correlacion_datos)[2] <- "Europa"
colnames(correlacion_datos)[3] <- "Africa Sub-sahariana"
colnames(correlacion_datos)[5] <- "Australia y OCeanía"
colnames(correlacion_datos)[6] <- "Norteamérica"
colnames(correlacion_datos)[7] <- "Suramérica"
colnames(correlacion_datos)[8] <- "Centroamérica y el Caribe"
colnames(correlacion_datos)[9] <- "Medio Oriente y N. Africa
"
# Mostrar el data frame actualizado
print(correlacion_datos)
# version 2: Correlación entre Consumo de alcohol y variables de el índice de felicidad según decil
# Calcular los deciles del consumo de alcohol y asignarlos a una nueva variable
base_datos2 <- base_datos %>%
arrange(both) %>%
mutate(decil_alcohol = ntile(both, 10))
# Crear un data frame para almacenar las correlaciones
correlacion_deciles <- data.frame(Variable = variables_interes)
# Calcular las correlaciones para cada decil y cada variable
for (i in 1:10) {
decil_data <- base_datos2 %>% filter(decil_alcohol == i)
correlaciones <- correlaciones <- sapply(variables_interes, function(var) cor(decil_data$both, decil_data[[var]], method = "spearman"))
correlacion_deciles[paste("Decil_", i, sep = "")] <- correlaciones
}
# Cambiar los nombres de las filas
rownames(correlacion_deciles) <- variables_interes
# Eliminar la fila correspondiente a "both"
correlacion_deciles <- correlacion_deciles[correlacion_deciles$Variable != "both", ]
# Mover la fila "ladder_score" al principio
correlacion_deciles <- correlacion_deciles %>%
arrange(desc(Variable == "ladder_score"))
# Nuevos nombres de las variables
nuevos_nombres <- c("Indice de felicidad", "Seguro Social", "Esperanza de vida saludable", "Libertad para la toma de decisiones", "Generosidad","Percepciones de corrupción")
# Cambiar los nombres de las variables
correlacion_deciles$Variable <- nuevos_nombres
colnames(correlacion_deciles)[2] <- "Decil 1"
colnames(correlacion_deciles)[3] <- "Decil 2"
colnames(correlacion_deciles)[4] <- "Decil 3"
colnames(correlacion_deciles)[5] <- "Decil 4"
colnames(correlacion_deciles)[6] <- "Decil 5"
colnames(correlacion_deciles)[7] <- "Decil 6"
colnames(correlacion_deciles)[8] <- "Decil 7"
colnames(correlacion_deciles)[9] <- "Decil 8"
colnames(correlacion_deciles)[10] <- "Decil 9"
colnames(correlacion_deciles)[11] <- "Decil 10"
# Transponer el data frame
correlacion_deciles_transpuesto <- correlacion_deciles %>%
pivot_longer(cols = starts_with("Decil"), names_to = "Decil", values_to = "Valor") %>%
pivot_wider(names_from = Variable, values_from = Valor)
# Cambiar los nombres de las filas
rownames(correlacion_deciles_transpuesto) <- paste("Decil", 1:10, sep = "_")
# Mostrar el data frame transpuesto
print(correlacion_deciles_transpuesto)
# Cuadro 2: índice de felicidad promedio para cada decil
# Calcular el índice de felicidad promedio, varianza, máximo y mínimo, y obtener los nombres de los países para cada decil
resumen_felicidad_por_decil <- relacion_AlcoholYFelicidad2 %>%
group_by(decil_alcohol) %>%
summarize(
Promedio_Índice_de_felicidad = mean(ladder_score),
Varianza_Índice_de_felicidad = var(ladder_score),
Máximo_Índice_de_felicidad = max(ladder_score),
Mínimo_Índice_de_felicidad = min(ladder_score)
)
# Cambiar los nombres de las columnas
resumen_felicidad_por_decil <- resumen_felicidad_por_decil %>%
rename(
"Promedio" = Promedio_Índice_de_felicidad,
"Varianza" = Varianza_Índice_de_felicidad,
"Máximo" = Máximo_Índice_de_felicidad,
"Mínimo" = Mínimo_Índice_de_felicidad,
"Decil" = decil_alcohol
)
# Mostrar el cuadro de resumen
print(resumen_felicidad_por_decil)
# Calcular el consumo promedio de alcohol para cada decil
consumo_promedio_por_decil <- relacion_AlcoholYFelicidad2 %>%
group_by(decil_alcohol) %>%
summarize(Consumo_Promedio_Alcohol = mean(both))
# Cambiar el nombre de la columna
consumo_promedio_por_decil <- consumo_promedio_por_decil %>%
rename("Consumo Promedio de Alcohol" = Consumo_Promedio_Alcohol)
consumo_promedio_por_decil <- consumo_promedio_por_decil %>%
rename("Decil" = decil_alcohol)
# Mostrar el cuadro de resumen
print(consumo_promedio_por_decil)
# Crear la tabla LaTeX
tabla_latex1 <- xtable(
resumen_felicidad_por_decil,
caption = "Resumen Estadístico del Índice de Felicidad por Decil de Consumo de Alcohol",
label = "tab:resumen-felicidad-decil"
)
# Configurar opciones para ajustar la tabla a una sola página
options(xtable.comment = FALSE)
print(tabla_latex1, file = "tabla_deciles.tex", floating = FALSE, hline.after = c(-1, 0, nrow(promedio_felicidad_por_decil)))
# Confirmar que se ha creado el archivo "tabla_deciles.tex"
#list.files()
#---Notas y pendientes----------------------------------------------------------
#
#
View(base_datos)
# Calcular los promedios por región
promedios_region <- relacion_AlcoholYFelicidad %>%
group_by(Region) %>%
summarise(
Promedio_Alcohol = mean(both),
Promedio_Felicidad = mean(ladder_score)
) %>%
arrange(desc(Promedio_Felicidad))  # Ordenar por índice de felicidad promedio de mayor a menor
# Modificacón los nombres de las regiones
promedios_region$Region <- case_when(
promedios_region$Region == "Europe" ~ "Europa",
promedios_region$Region == "Sub-Saharan Africa" ~ "Africa y Africa Sub-sahariana",
promedios_region$Region == "Asia" ~ "Asia",
promedios_region$Region == "Australia and Oceania" ~ "AUS y OCE",
promedios_region$Region == "North America" ~ "Norteamérica",
promedios_region$Region == "South America" ~ "Suramérica",
promedios_region$Region == "Middle East, North Africa, and Greater Arabia" ~ "M. Oriente y  N. África",
promedios_region$Region == "Central America and the Caribbean" ~ "Centroamérica y el Caribe",
TRUE ~ promedios_region$Region  # Mantener otros nombres sin cambios
)
# Crear el gráfico de barras
grafico_promedios <- ggplot(promedios_region, aes(x = reorder(Region, -Promedio_Felicidad), y = Promedio_Alcohol, fill = Promedio_Felicidad)) +
geom_bar(stat = "identity") +
labs(
x = "Región",
y = "Promedio de Consumo de Alcohol",
title = "Promedio de Consumo de Alcohol por Región",
subtitle = "Ordenado por Índice de Felicidad Promedio"
) +
theme_minimal() +
cowplot::theme_cowplot() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.title.x = element_text(size = 10), # Ajustar el tamaño del texto del eje x
axis.title.y = element_text(size = 10),
plot.margin = margin(t = 0, r = 2, b = 0, l = 0, unit = "cm"),  # Aumentar el margen derecho
legend.position = c(0.9, 0.95),  # Colocar la leyenda en la esquina superior derecha
legend.title = element_text(size = 10),  # Tamaño del título de la leyenda
legend.text = element_text(size = 8)  # Tamaño del texto de la leyenda (nombre de la barra de colores)
) +
scale_fill_gradient(low = "red", high = "green", name = "Índice de Felicidad") +
geom_text(aes(label = round(Promedio_Felicidad, 2)), vjust = -0.5, size = 3)  # Agregar etiquetas de promedio de felicidad arriba de las barras
# Mostrar el gráfico
grafico_promedios
# Calcular los deciles del consumo de alcohol y asignarlos a una nueva variable
base_datos2 <- base_datos %>%
arrange(both) %>%
mutate(decil_alcohol = ntile(both, 10))
# Crear un data frame para almacenar las correlaciones
correlacion_deciles <- data.frame(Variable = variables_interes)
# Calcular las correlaciones para cada decil y cada variable
for (i in 1:10) {
decil_data <- base_datos2 %>% filter(decil_alcohol == i)
correlaciones <- correlaciones <- sapply(variables_interes, function(var) cor(decil_data$both, decil_data[[var]], method = "spearman"))
correlacion_deciles[paste("Decil_", i, sep = "")] <- correlaciones
}
# Cambiar los nombres de las filas
rownames(correlacion_deciles) <- variables_interes
# Eliminar la fila correspondiente a "both"
correlacion_deciles <- correlacion_deciles[correlacion_deciles$Variable != "both", ]
# Mover la fila "ladder_score" al principio
correlacion_deciles <- correlacion_deciles %>%
arrange(desc(Variable == "ladder_score"))
# Nuevos nombres de las variables
nuevos_nombres <- c("Indice de felicidad", "Seguro Social", "Esperanza de vida saludable", "Libertad para la toma de decisiones", "Generosidad","Percepciones de corrupción")
# Cambiar los nombres de las variables
correlacion_deciles$Variable <- nuevos_nombres
colnames(correlacion_deciles)[2] <- "Decil 1"
colnames(correlacion_deciles)[3] <- "Decil 2"
colnames(correlacion_deciles)[4] <- "Decil 3"
colnames(correlacion_deciles)[5] <- "Decil 4"
colnames(correlacion_deciles)[6] <- "Decil 5"
colnames(correlacion_deciles)[7] <- "Decil 6"
colnames(correlacion_deciles)[8] <- "Decil 7"
colnames(correlacion_deciles)[9] <- "Decil 8"
colnames(correlacion_deciles)[10] <- "Decil 9"
colnames(correlacion_deciles)[11] <- "Decil 10"
# Transponer el data frame
correlacion_deciles_transpuesto <- correlacion_deciles %>%
pivot_longer(cols = starts_with("Decil"), names_to = "Decil", values_to = "Valor") %>%
pivot_wider(names_from = Variable, values_from = Valor)
# Cambiar los nombres de las filas
rownames(correlacion_deciles_transpuesto) <- paste("Decil", 1:10, sep = "_")
# Mostrar el data frame transpuesto
print(correlacion_deciles_transpuesto)
# Calcular el índice de felicidad promedio, varianza, máximo y mínimo, y obtener los nombres de los países para cada decil
resumen_felicidad_por_decil <- relacion_AlcoholYFelicidad2 %>%
group_by(decil_alcohol) %>%
summarize(
Promedio_Índice_de_felicidad = mean(ladder_score),
Varianza_Índice_de_felicidad = var(ladder_score),
Máximo_Índice_de_felicidad = max(ladder_score),
Mínimo_Índice_de_felicidad = min(ladder_score)
)
# Cambiar los nombres de las columnas
resumen_felicidad_por_decil <- resumen_felicidad_por_decil %>%
rename(
"Promedio" = Promedio_Índice_de_felicidad,
"Varianza" = Varianza_Índice_de_felicidad,
"Máximo" = Máximo_Índice_de_felicidad,
"Mínimo" = Mínimo_Índice_de_felicidad,
"Decil" = decil_alcohol
)
# Mostrar el cuadro de resumen
print(resumen_felicidad_por_decil)
# Variables a analizar
variables_interes <- c("both", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption", "ladder_score")
# Regiones
regiones_unicas <- c(
"Europe",
"Sub-Saharan Africa",
"Asia",
"Australia and Oceania",
"North America",
"South America",
"Central America and the Caribbean",
"Middle East, North Africa, and Greater Arabia"
)
# Crear una lista para almacenar las matrices de correlación por región
correlacion_matrices <- list()
# Bucle para calcular las matrices de correlación por región
for (region in regiones_unicas) {
# Filtrar los datos para la región actual
datos_region <- base_datos %>% filter(region == region)
# Calcular la matriz de correlación
correlacion_matrix <- cor(datos_region[variables_interes], method = "spearman")
# Almacenar la matriz de correlación en la lista
correlacion_matrices[[region]] <- correlacion_matrix
}
# Calcular la matriz de correlación promedio para todas las regiones
correlacion_matrix_general <- matrix(NA, nrow = length(variables_interes), ncol = 1)
colnames(correlacion_matrix_general) <- c("General")
for (i in seq_along(variables_interes)) {
variable <- variables_interes[i]
region_correlacion <- sapply(correlacion_matrices, function(mat) mat[1, i])
correlacion_matrix_general[i, ] <- mean(region_correlacion, na.rm = TRUE)
}
# Crear un data frame con las correlaciones para todas las regiones, incluyendo "General"
correlacion_datos <- data.frame(Variable = variables_interes)
for (region in regiones_unicas) {
region_correlacion <- correlacion_matrices[[region]][1, ]  # Correlaciones de "both" con todas las variables
correlacion_datos[, region] <- region_correlacion
}
# Agregar la columna "General" al data frame
correlacion_datos$General <- correlacion_matrix_general[, "General"]
# Eliminar la fila correspondiente a "both"
correlacion_datos <- correlacion_datos[correlacion_datos$Variable != "both", ]
# Mover la fila "General" al principio
correlacion_datos <- correlacion_datos %>%
arrange(desc(Variable == "General"))
# Mover la fila "ladderscore" al principio
correlacion_datos <- correlacion_datos %>%
arrange(desc(Variable == "ladder_score"))
# Nuevos nombres de las variables
nuevos_nombres <- c("Indice de felicidad", "Seguro Social", "Esperanza de vida saludable", "Libertad para la toma de decisiones", "Generosidad","Percepciones de corrupción")
# Cambiar los nombres de las variables
correlacion_datos <- correlacion_datos %>%
mutate(Variable = nuevos_nombres)
colnames(correlacion_datos)[2] <- "Europa"
colnames(correlacion_datos)[3] <- "Africa Sub-sahariana"
colnames(correlacion_datos)[5] <- "Australia y OCeanía"
colnames(correlacion_datos)[6] <- "Norteamérica"
colnames(correlacion_datos)[7] <- "Suramérica"
colnames(correlacion_datos)[8] <- "Centroamérica y el Caribe"
colnames(correlacion_datos)[9] <- "Medio Oriente y N. Africa
"
# Mostrar el data frame actualizado
print(correlacion_datos)
View(correlacion_datos)
# Calcular el índice de felicidad promedio, varianza, máximo y mínimo, y obtener los nombres de los países para cada región
resumen_felicidad_por_region <- relacion_AlcoholYFelicidad2 %>%
group_by(Region) %>%
summarize(
Promedio_Consumo_Alcohol = mean(both),
Promedio_Índice_de_felicidad = mean(ladder_score),
Varianza_Índice_de_felicidad = var(ladder_score),
Máximo_Índice_de_felicidad = max(ladder_score),
Mínimo_Índice_de_felicidad = min(ladder_score)
)
# Cambiar el orden de las columnas
resumen_felicidad_por_region <- resumen_felicidad_por_region %>%
select(
"Promedio_Consumo_Alcohol",
"Promedio_Índice_de_felicidad",
"Varianza_Índice_de_felicidad",
"Máximo_Índice_de_felicidad",
"Mínimo_Índice_de_felicidad",
"Region"
)
# Renombrar las columnas
colnames(resumen_felicidad_por_region) <- c(
"Promedio Consumo Alcohol",
"Promedio Índice de felicidad",
"Varianza Índice de felicidad",
"Máximo Índice de felicidad",
"Mínimo Índice de felicidad",
"Región"
)
# Mostrar el cuadro de resumen
print(resumen_felicidad_por_region)
View(resumen_felicidad_por_region)
# Calcular el índice de felicidad promedio, varianza, máximo y mínimo, y obtener los nombres de los países para cada región
resumen_felicidad_por_region <- relacion_AlcoholYFelicidad2 %>%
group_by(Region) %>%
summarize(
Promedio_Consumo_Alcohol = mean(both),
Promedio_Índice_de_felicidad = mean(ladder_score),
Varianza_Índice_de_felicidad = var(ladder_score),
Máximo_Índice_de_felicidad = max(ladder_score),
Mínimo_Índice_de_felicidad = min(ladder_score)
)
# Cambiar el orden de las columnas
resumen_felicidad_por_region <- resumen_felicidad_por_region %>%
select("Region",
"Promedio_Consumo_Alcohol",
"Promedio_Índice_de_felicidad",
"Varianza_Índice_de_felicidad",
"Máximo_Índice_de_felicidad",
"Mínimo_Índice_de_felicidad"
)
# Renombrar las columnas
colnames(resumen_felicidad_por_region) <- c("Región",
"Promedio Consumo Alcohol",
"Promedio Índice de felicidad",
"Varianza Índice de felicidad",
"Máximo Índice de felicidad",
"Mínimo Índice de felicidad"
)
# Mostrar el cuadro de resumen
print(resumen_felicidad_por_region)
# Calcular el índice de felicidad promedio, varianza, máximo y mínimo, y obtener los nombres de los países para cada región
resumen_felicidad_por_region <- relacion_AlcoholYFelicidad2 %>%
group_by(Region) %>%
summarize(
Promedio_Consumo_Alcohol = mean(both),
Promedio_Índice_de_felicidad = mean(ladder_score),
Varianza_Índice_de_felicidad = var(ladder_score),
Máximo_Índice_de_felicidad = max(ladder_score),
Mínimo_Índice_de_felicidad = min(ladder_score)
)
# Cambiar el orden de las columnas
resumen_felicidad_por_region <- resumen_felicidad_por_region %>%
select("Region",
"Promedio_Consumo_Alcohol",
"Promedio_Índice_de_felicidad",
"Varianza_Índice_de_felicidad",
"Máximo_Índice_de_felicidad",
"Mínimo_Índice_de_felicidad"
)
# Renombrar las columnas
colnames(resumen_felicidad_por_region) <- c("Región",
"Promedio Consumo Alcohol",
"Promedio Índice de felicidad",
"Varianza Índice de felicidad",
"Máximo Índice de felicidad",
"Mínimo Índice de felicidad"
)
# Mostrar el cuadro de resumen
print(resumen_felicidad_por_region)
View(resumen_felicidad_por_region)
# Crear la tabla LaTeX
tabla_latex2 <- xtable(
resumen_resumen_felicidad_por_region,
caption = "Resumen Estadístico del Índice de Felicidad por Región",
label = "tab:resumen-felicidad-region"
)
# Configurar opciones para ajustar la tabla a una sola página
options(xtable.comment = FALSE)
# Mostrar el cuadro de resumen
print(resumen_felicidad_por_region)
# Crear la tabla LaTeX
tabla_latex2 <- xtable(
resumen_resumen_felicidad_por_region,
caption = "Resumen Estadístico del Índice de Felicidad por Región",
label = "tab:resumen-felicidad-region"
)
# Crear la tabla LaTeX
tabla_latex2 <- xtable(
resumen_felicidad_por_region,
caption = "Resumen Estadístico del Índice de Felicidad por Región",
label = "tab:resumen-felicidad-region"
)
# Configurar opciones para ajustar la tabla a una sola página
options(xtable.comment = FALSE)
print(tabla_latex2, file = "tabla_region.tex", floating = FALSE, hline.after = c(-1, 0, nrow(promedio_felicidad_por_decil)))
print(tabla_latex2, file = "tabla_region.tex", floating = FALSE, hline.after = c(-1, 0, nrow(resumen_felicidad_por_region)))
View(base_datos2)
View(datos_region)
View(promedios_region)
View(resumen_felicidad_por_region)
View(caja_y_bigotes_region)
View(caja_y_bigotes_region)
View(datos_region)
# Filtrar los países de la región "Australia and Oceania"
paises_oceania_australia <- relacion_AlcoholYFelicidad2 %>%
filter(Region == "Australia and Oceania")
# Contar el número de países en la región
num_paises_oceania_australia <- nrow(paises_oceania_australia)
# Mostrar el resultado
print(num_paises_oceania_australia)
paises_oceania_australia
View(asia_data)
View(base_datos2)
