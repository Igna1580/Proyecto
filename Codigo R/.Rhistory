clase_columnas <- sapply(base_datos, class)
base_datos <- base_datos %>%
mutate(Region = ifelse(
pais %in% c(
"Bangladesh", "Bhutan", "Brunei", "Cambodia", "China", "India",
"Indonesia", "Japan", "Kazakhstan", "North Korea", "South Korea",
"Kyrgyzstan", "Laos", "Malaysia", "Maldives", "Mongolia", "Myanmar",
"Nepal", "Philippines", "Singapore", "Sri Lanka", "Taiwan", "Tajikistan",
"Thailand", "Turkmenistan", "Uzbekistan", "Vietnam"
), "Asia",
ifelse(
pais %in% c(
"Afghanistan", "Algeria", "Bahrain", "Egypt", "Iran", "Iraq",
"Israel", "Jordan", "Kuwait", "Lebanon", "Libya", "Morocco",
"Oman", "Pakistan", "Qatar", "Saudi Arabia", "Somalia", "Syria",
"Tunisia", "Turkey", "United Arab Emirates", "Yemen"
), "Medio Oriente, Norte de Africa y Gran Arabia",
ifelse(
pais %in% c(
"Albania", "Andorra", "Armenia", "Austria", "Belarus", "Belgium",
"Bosnia and Herzegovina", "Bulgaria", "Croatia", "Cyprus", "Czech Republic",
"Denmark", "Estonia", "Finland", "France", "Georgia", "Germany",
"Greece", "Hungary", "Iceland", "Ireland", "Italy", "Kosovo",
"Latvia", "Liechtenstein", "Lithuania", "Luxembourg", "North Macedonia",
"Malta", "Moldova", "Monaco", "Montenegro", "Netherlands", "Norway",
"Poland", "Portugal", "Romania", "Russia", "San Marino", "Serbia",
"Slovakia", "Slovenia", "Spain", "Sweden", "Switzerland", "Ukraine",
"United Kingdom", "Vatican City"
), "Europa",
ifelse(
pais %in% c("Canada", "Greenland", "Mexico", "United States"), "Norteamerica",
ifelse(
pais %in% c(
"Antigua and Barbuda", "The Bahamas", "Barbados", "Belize", "Costa Rica",
"Cuba", "Dominica", "Dominican Republic", "El Salvador", "Grenada",
"Guatemala", "Haiti", "Honduras", "Jamaica", "Nicaragua", "Panama",
"Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines",
"Trinidad and Tobago"
), "Centroamerica y el Caribe",
ifelse(
pais %in% c(
"Argentina", "Bolivia", "Brazil", "Chile", "Colombia", "Ecuador",
"Guyana", "Paraguay", "Peru", "Suriname", "Uruguay", "Venezuela"
), "Suramerica",
ifelse(
pais %in% c(
"Angola", "Benin", "Botswana", "Burkina Faso", "Burundi", "Cameroon",
"Cape Verde", "The Central African Republic", "Chad", "Comoros",
"Republic of the Congo", "Congo (Brazzaville)",
"Ivory Coast", "Djibouti", "Equatorial Guinea", "Eritrea", "Ethiopia",
"Gabon", "Gambia", "Ghana", "Guinea", "Guinea-Bissau", "Kenya",
"Lesotho", "Liberia", "Madagascar", "Malawi", "Mali", "Mauritania",
"Mauritius", "Mozambique", "Namibia", "Niger", "Nigeria", "Rwanda",
"Sao Tome and Principe", "Senegal", "Seychelles", "Sierra Leone",
"South Africa", "South Sudan", "Sudan", "Swaziland", "Tanzania",
"Togo", "Uganda", "Zambia", "Zimbabwe"
), "Africa Sub-sahariana",
ifelse(
pais %in% c(
"Australia", "East Timor", "Fiji", "Kiribati", "Marshall Islands",
"The Federated States of Micronesia", "Nauru", "New Zealand", "Palau",
"Papua New Guinea", "Samoa", "Solomon Islands", "Tonga", "Tuvalu",
"Vanuatu"
), "Australia y Oceania",
"Otro"
)
)
)
)
)
)
)
))
base_datos$pais <- recode(base_datos$pais,
"Latvia" = "Letonia",
"Moldova" = "Moldavia",
"Germany" = "Alemania",
"Lithuania" = "Lituania",
"Ireland" = "Irlanda",
"Spain" = "España",
"Uganda" = "Uganda",
"Bulgaria" = "Bulgaria",
"Luxembourg" = "Luxemburgo",
"Romania" = "Rumania",
"Montenegro" = "Montenegro",
"France" = "Francia",
"Slovenia" = "Eslovenia",
"Portugal" = "Portugal",
"Laos" = "Laos",
"Tanzania" = "Tanzania",
"Austria" = "Austria",
"Poland" = "Polonia",
"United Kingdom" = "Reino Unido",
"Switzerland" = "Suiza",
"Hungary" = "Hungría",
"Slovakia" = "Eslovaquia",
"Burkina Faso" = "Burkina Faso",
"Belgium" = "Bélgica",
"Cyprus" = "Chipre",
"Estonia" = "Estonia",
"New Zealand" = "Nueva Zelanda",
"Finland" = "Finlandia",
"Russia" = "Rusia",
"Greece" = "Grecia",
"Australia" = "Australia",
"Denmark" = "Dinamarca",
"Japan" = "Japón",
"United States" = "Estados Unidos",
"Netherlands" = "Países Bajos",
"Georgia" = "Georgia",
"South Africa" = "Sudáfrica",
"Argentina" = "Argentina",
"Iceland" = "Islandia",
"Sweden" = "Suecia",
"Chile" = "Chile",
"Serbia" = "Serbia",
"Canada" = "Canadá",
"Croatia" = "Croacia",
"Thailand" = "Tailandia",
"South Korea" = "Corea del Sur",
"Ukraine" = "Ucrania",
"Malta" = "Malta",
"Gabon" = "Gabón",
"Italy" = "Italia",
"Vietnam" = "Vietnam",
"Cambodia" = "Camboya",
"Bosnia and Herzegovina" = "Bosnia y Herzegovina",
"Panama" = "Panamá",
"Brazil" = "Brasil",
"Norway" = "Noruega",
"Philippines" = "Filipinas",
"Paraguay" = "Paraguay",
"Uruguay" = "Uruguay",
"Albania" = "Albania",
"Peru" = "Perú",
"Dominican Republic" = "República Dominicana",
"Botswana" = "Botsuana",
"North Macedonia" = "Macedonia del Norte",
"Nigeria" = "Nigeria",
"China" = "China",
"Mongolia" = "Mongolia",
"India" = "India",
"Cameroon" = "Camerún",
"Colombia" = "Colombia",
"Liberia" = "Liberia",
"Sierra Leone" = "Sierra Leona",
"Nicaragua" = "Nicaragua",
"Mexico" = "México",
"Kazakhstan" = "Kazajistán",
"Kyrgyzstan" = "Kirguistán",
"Mauritius" = "Mauricio",
"Armenia" = "Armenia",
"Zimbabwe" = "Zimbabue",
"Zambia" = "Zambia",
"Israel" = "Israel",
"Jamaica" = "Jamaica",
"El Salvador" = "El Salvador",
"Malawi" = "Malaui",
"Costa Rica" = "Costa Rica",
"Honduras" = "Honduras",
"Bolivia" = "Bolivia",
"United Arab Emirates" = "Emiratos Árabes Unidos",
"Venezuela" = "Venezuela",
"Gambia" = "Gambia",
"Ecuador" = "Ecuador",
"Namibia" = "Namibia",
"Ivory Coast" = "Costa de Marfil",
"Sri Lanka" = "Sri Lanka",
"Ghana" = "Ghana",
"Mozambique" = "Mozambique",
"Togo" = "Togo",
"Uzbekistan" = "Uzbekistán",
"Benin" = "Benín",
"Ethiopia" = "Etiopía",
"Kenya" = "Kenia",
"Myanmar" = "Myanmar",
"Tunisia" = "Túnez",
"Singapore" = "Singapur",
"Madagascar" = "Madagascar",
"Turkey" = "Turquía",
"Guatemala" = "Guatemala",
"Lebanon" = "Líbano",
"Mali" = "Malí",
"Chad" = "Chad",
"Comoros" = "Comoras",
"Bahrain" = "Baréin",
"Congo (Brazzaville)" = "Congo (Brazzaville)",
"Guinea" = "Guinea",
"Iran" = "Irán",
"Malaysia" = "Malasia",
"Tajikistan" = "Tayikistán",
"Senegal" = "Senegal",
"Algeria" = "Argelia",
"Nepal" = "Nepal",
"Niger" = "Níger",
"Jordan" = "Jordania",
"Morocco" = "Marruecos",
"Iraq" = "Irak",
"Pakistan" = "Pakistán",
"Indonesia" = "Indonesia",
"Egypt" = "Egipto",
"Afghanistan" = "Afganistán",
"Bangladesh" = "Bangladesh",
"Saudi Arabia" = "Arabia Saudita",
"Mauritania" = "Mauritania"
)
distribucion_felicidad <- ggplot(base_datos, aes(x=indice_de_felicidad)) +
geom_histogram(binwidth = 0.5, col='black', fill= 'lightskyblue2')+
labs(x= "Indice_de_Felicidad", y="Frecuencia")  +
cowplot::theme_cowplot()
print(distribucion_felicidad)
density_plot_f <- ggplot(data.frame(x = base_datos$indice_de_felicidad), aes(x = x)) +
geom_density(fill = "lightskyblue2", alpha = 0.5) +
labs(x = "Valor", y = "Densidad") +
theme_minimal()  +
cowplot::theme_cowplot()
print(density_plot_f)
distribucion_alcohol <- ggplot(base_datos, aes(x=poblacion_Total_consumo)) +
geom_histogram(binwidth = 0.7, col='black', fill= 'red4')+
labs(x= "Consumo de alcohol", y="Frecuencia")  +
cowplot::theme_cowplot()
print(distribucion_alcohol)
density_plot_a <- ggplot(data.frame(x = base_datos$poblacion_Total_consumo), aes(x = x)) +
geom_density(fill = "red4", alpha = 0.5) +
labs(x = "Valor", y = "Densidad") +
theme_minimal()  +
cowplot::theme_cowplot()
print(density_plot_a)
ad_test_felicidad <- ad.test(base_datos$indice_de_felicidad)
ad_test_alcohol <- ad.test(base_datos$poblacion_Total_consumo)
lil_test_felicidad <- lillie.test(base_datos$indice_de_felicidad)
lil_test_alcohol <- lillie.test(base_datos$poblacion_Total_consumo)
# -- Enontramos la cantidad de datos de felicidad
n = length(base_datos$indice_de_felicidad)
# -- Sumamos todos los indices de felicidad para cada uno de los países
suma.felicidad = sum(base_datos$indice_de_felicidad)
# -- Calculamos la la media de la muestra
mu = suma.felicidad/n
# -- Calculamos la varianza muestral
sigma.cuadrado = (sum((base_datos$indice_de_felicidad-mu)^2))/n
# -- Calculamos el máximo y el mínimo de los datos de felicidad
max_felicidad <- max(base_datos$indice_de_felicidad)
min_felicidad <- min(base_datos$indice_de_felicidad)
# -- Generamos un vector de 1000 datos aleatorios, considerando el valor máximo y el valor mínimo
theta = seq(1.778, 7.804, length.out = 1000)
grafico_Maxima_Verosimilitud <- ggplot(data.frame(
theta = theta,
L = (1/sqrt(2*pi*sigma.cuadrado))*exp((-(theta-mu)^2)/(2*sigma.cuadrado))),
aes(x = theta , y = L)) +
geom_line(linewidth = 2) +
geom_vline(aes(xintercept = mean(base_datos$indice_de_felicidad)), linewidth = 2, color = "red") +
cowplot::theme_cowplot() +
labs(
title = "Verosimilitud con la media de Theta", x = "Theta", y =
"Verosimilitud")
print(grafico_Maxima_Verosimilitud)
Grafico_max_ver_felicidad <- ggplot(data = base_datos, aes(x = indice_de_felicidad)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = "lightskyblue", color = "black", alpha = 0.5) +
stat_function(fun = dnorm, args = list(mean = mean(base_datos$indice_de_felicidad), sd = sd(base_datos$indice_de_felicidad)), size = 1) +
cowplot::theme_cowplot() +
labs(
title = "Verosimilitud respecto al Índice de felicidad", x = "Índice de felicidad", y =
"Densidad")
print(Grafico_max_ver_felicidad)
Grafico_max_ver_alcohol <- ggplot(data = base_datos, aes(x = poblacion_Total_consumo)) +
geom_histogram(aes(y = ..density..), binwidth = 1.3, fill = "lightblue2", color = "black", alpha = 0.5) +
stat_function(fun = dunif, args = list(min = 0, max = 13.19), size = 1) +  # Distribución uniforme (0,13.19)
cowplot::theme_cowplot() +
labs(
title = "Verosimilitud respecto al consumo de alcohol", x = "Consumo de alcohol", y =
"Densidad")
print(Grafico_max_ver_alcohol)
coef.asim.Fish <- skewness(base_datos$indice_de_felicidad)
curtosis.Fish <- kurtosis(base_datos$indice_de_felicidad)
# - Numero de columnas
num_columnas <- ncol(base_datos)
Nombres <- colnames(base_datos)[2:(num_columnas - 1)]
Minimo <- Maximo <- Rango <- Media <- Mediana <- PrimerCuartil <- TercerCuartil <- RangoIntercuartil <- DesviacionEstandar <- Varianza <- CoeficienteVariacion <- vector("numeric", length(Nombres))
for(i in 2:(num_columnas - 1)){
Minimo <- append(Minimo, min(base_datos[, i]))
Maximo <- append(Maximo, max(base_datos[, i]))
Rango <- append(Rango, max(base_datos[, i]) - min(base_datos[, i]))
Media <- append(Media, mean(base_datos[, i]))
Mediana <- append(Mediana, median(base_datos[, i]))
PrimerCuartil <- append(PrimerCuartil, quantile(base_datos[, i], 0.25))
TercerCuartil <- append(TercerCuartil, quantile(base_datos[, i], 0.75))
RangoIntercuartil <- append(RangoIntercuartil, IQR(base_datos[, i]))
DesviacionEstandar <- append(DesviacionEstandar, sd(base_datos[, i]))
Varianza <- append(Varianza, var(base_datos[, i]))
CoeficienteVariacion <- append(CoeficienteVariacion, sd(base_datos[, i]) /
mean(base_datos[, i]))}
AnalisisD <- data.frame(Nombres, Minimo, Maximo, Rango, Media, PrimerCuartil,
Mediana, TercerCuartil, RangoIntercuartil, DesviacionEstandar,
Varianza, CoeficienteVariacion)
columnas_a_redondear <- c("Minimo", "Maximo", "Rango", "Media", "PrimerCuartil",
"Mediana", "TercerCuartil", "RangoIntercuartil", "DesviacionEstandar",
"Varianza", "CoeficienteVariacion")
AnalisisD[columnas_a_redondear] <- round(AnalisisD[columnas_a_redondear], 2)
AnalisisD <- AnalisisD[-c(1:11), ]
options(repr.plot.width = 4, repr.plot.height = 15)
base_datos2 <- base_datos %>% arrange(poblacion_Total_consumo)
gráfico_Barras1 <- ggplot(base_datos2, aes(x = poblacion_Total_consumo, y = reorder(pais, poblacion_Total_consumo), fill = indice_de_felicidad)) +
geom_bar(stat = "identity") +
labs(
x = "Promedio anual de consumo de alcohol puro per cápita en litros",
y = "País",
title = "Consumo de alcohol por país ordenado de mayor a menor",
subtitle = "Codificado con escala de color según Índice de felicidad",
fill = "Índice de felicidad") +
scale_x_continuous(breaks = 0:13, labels = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12","13")) +
scale_fill_gradient(low = "red", high = "green") +  # Escala de colores de rojo a verde
theme_minimal() + cowplot::theme_cowplot() + # Aplicar un tema minimalista
theme(axis.text.y = element_text(size = 7, hjust = 0, color = "black"),
axis.text.x = element_text(size = 7, hjust = 0, color = "black"),
axis.title.x = element_text(size = 10, color = "black"),  # Tamaño del título del eje x
axis.title.y = element_text(size = 10, color = "black"),# Ajustar el tamaño y alineación del texto en el eje y
plot.title = element_text(size = 11, color = "black"),
plot.subtitle = element_text(size = 11, color = "black"),# Ajustar el tamaño del título
legend.text = element_text(size = 10, color = "black"),  # Ajustar el tamaño del texto en el color key
legend.title = element_text(size = 10, color = "black")) +  # Ajustar el tamaño del título del color key
guides(fill = guide_colorbar(barwidth = 2, barheight = 6, title.position = "top"))  # Ajustar el tamaño del color key y su posición
print(gráfico_Barras1)
promedios_region <- base_datos %>%
group_by(Region) %>% summarise(Promedio_Alcohol = mean(poblacion_Total_consumo),
Promedio_Felicidad = mean(indice_de_felicidad)) %>% arrange(desc(Promedio_Felicidad))
grafico_promedios <- ggplot(promedios_region, aes(x = reorder(Region, -Promedio_Felicidad), y = Promedio_Alcohol, fill = Promedio_Felicidad)) +
geom_bar(stat = "identity") +
labs(
x = "Región",
y = "Promedio de consumo de alcohol",
title = "Promedio de consumo de alcohol por región",
subtitle = "Ordenado por Índice de felicidad promedio") +
theme_minimal() + cowplot::theme_cowplot() +
theme( plot.title = element_text(size = 20),  # Tamaño del título
plot.subtitle = element_text(size = 18),  # Tamaño del subtítulo
axis.title.x = element_text(size = 18),  # Tamaño del título del eje x
axis.title.y = element_text(size = 18),  # Tamaño del título del eje y
axis.text.x = element_text(size = 18, angle = 45, hjust = 1),  # Texto del eje x inclinado
axis.text.y = element_text(size = 18),  # Tamaño del texto del eje y
plot.margin = margin(20, 20, 20, 20)) +  # Márgenes del gráfico
scale_fill_gradient(low = "red", high = "green", name = "Índice de felicidad") +
geom_text(aes(label = round(Promedio_Felicidad, 2)), vjust = -0.5)  # Ajustar el tamaño del texto a 18
promedios_region$Region <- case_when(
promedios_region$Region == "Europa" ~ "E.",
promedios_region$Region == "Africa Sub-sahariana" ~ "Á.S.",
promedios_region$Region == "Asia" ~ "A.",
promedios_region$Region == "Australia y Oceania" ~ "OCE",
promedios_region$Region == "Norteamerica" ~ "N. Á.",
promedios_region$Region == "Suramerica" ~ "S. Á",
promedios_region$Region == "Medio Oriente, Norte de Africa y Gran Arabia" ~ "M.O./N.Á.",
promedios_region$Region == "Centroamerica y el Caribe" ~ "C.C.",
TRUE ~ promedios_region$Region)  # Mantener otros nombres sin cambios
promedios_region <- base_datos %>%
group_by(Region) %>% summarise(Promedio_Alcohol = mean(poblacion_Total_consumo),
Promedio_Felicidad = mean(indice_de_felicidad)) %>% arrange(desc(Promedio_Felicidad))
grafico_promedios <- ggplot(promedios_region, aes(x = reorder(Region, -Promedio_Felicidad), y = Promedio_Alcohol, fill = Promedio_Felicidad)) +
geom_bar(stat = "identity") +
labs(
x = "Región",
y = "Promedio de consumo de alcohol",
title = "Promedio de consumo de alcohol por región",
subtitle = "Ordenado por Índice de felicidad promedio") +
theme_minimal() + cowplot::theme_cowplot() +
theme( plot.title = element_text(size = 20),  # Tamaño del título
plot.subtitle = element_text(size = 18),  # Tamaño del subtítulo
axis.title.x = element_text(size = 18),  # Tamaño del título del eje x
axis.title.y = element_text(size = 18),  # Tamaño del título del eje y
axis.text.x = element_text(size = 18, angle = 45, hjust = 1),  # Texto del eje x inclinado
axis.text.y = element_text(size = 18),  # Tamaño del texto del eje y
plot.margin = margin(20, 20, 20, 20)) +  # Márgenes del gráfico
scale_fill_gradient(low = "red", high = "green", name = "Índice de felicidad") +
geom_text(aes(label = round(Promedio_Felicidad, 2)), vjust = -0.5)  # Ajustar el tamaño del texto a 18
promedios_region$Region <- case_when(
promedios_region$Region == "Europa" ~ "E.",
promedios_region$Region == "Africa Sub-sahariana" ~ "Á.S.",
promedios_region$Region == "Asia" ~ "A.",
promedios_region$Region == "Australia y Oceania" ~ "OCE",
promedios_region$Region == "Norteamerica" ~ "N. Á.",
promedios_region$Region == "Suramerica" ~ "S. Á",
promedios_region$Region == "Medio Oriente, Norte de Africa y Gran Arabia" ~ "M.O./N.Á.",
promedios_region$Region == "Centroamerica y el Caribe" ~ "C.C.",
TRUE ~ promedios_region$Region)  # Mantener otros nombres sin cambios
grafico_promedios2 <- ggplot(promedios_region, aes(x = reorder(Region, -Promedio_Felicidad), y = Promedio_Alcohol, fill = Promedio_Felicidad)) +
geom_bar(stat = "identity") +
labs(x = "Región",
y = "Promedio de consumo de alcohol") +
theme_minimal() +
cowplot::theme_cowplot() +
theme(
plot.margin = margin(20, 20, 20, 20),  # Márgenes del gráfico
axis.text.x = element_text(angle = 45, hjust = 1)) +  # Ángulo de 45 grados y alineación a la derecha
scale_fill_gradient(low = "red", high = "green", name = "Índice de felicidad") +
geom_text(aes(label = round(Promedio_Felicidad, 2)), vjust = -0.5) +  # Ajustar el tamaño del texto a 18
coord_cartesian(clip = 'off') +  # Evitar que las barras superiores oculten la leyenda
theme(legend.position = c(0.65, 0.85))  # Posicionar la leyenda en la parte superior y centrada
print(grafico_promedios2)
grafico_dispersion <- ggplot(base_datos, aes(x = poblacion_Total_consumo, y = indice_de_felicidad)) +
geom_point() + cowplot::theme_cowplot() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Línea de regresión
labs(
x = "Consumo de alcohol en litros de alcohol puro",
y = "Índice de felicidad",
title = "Gráfico de dispersión con línea de regresión",
subtitle = "Relación Índice de felicidad y consumo de alcohol") +
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 18),# Tamaño del título
axis.title.x = element_text(size = 18),  # Tamaño del título del eje x
axis.title.y = element_text(size = 18),  # Tamaño del título del eje y
axis.text.x = element_text(size = 18),  # Tamaño del texto del eje x
axis.text.y = element_text(size = 18),  # Tamaño del texto del eje y
plot.margin = margin(20, 20, 20, 20))  # Márgenes del gráfico
grafico_dispersion2 <- ggplot(base_datos, aes(x = poblacion_Total_consumo, y = indice_de_felicidad)) +
geom_point() + cowplot::theme_cowplot() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Línea de regresión
labs(
x = "Consumo de alcohol puro en litros",
y = "Índice de felicidad") +
theme(plot.margin = margin(20, 20, 20, 20))  # Márgenes del gráfico
grafico_dispersion2
base_datos2 <- base_datos2 %>% mutate(decil_alcohol = ntile(poblacion_Total_consumo, 10))
promedio_felicidad_por_decil <- base_datos2 %>% group_by(decil_alcohol) %>% summarize(promedio_felicidad = mean(indice_de_felicidad))
max_felicidad_por_decil <- base_datos2 %>% group_by(decil_alcohol) %>% summarize(max_felicidad = max(indice_de_felicidad))
min_felicidad_por_decil <- base_datos2 %>% group_by(decil_alcohol) %>% summarize(min_felicidad = min(indice_de_felicidad))
gráfico_Línea <- ggplot(promedio_felicidad_por_decil, aes(x = decil_alcohol, y = promedio_felicidad)) +
geom_line() +
geom_point(data = max_felicidad_por_decil, aes(x = decil_alcohol, y = max_felicidad), color = "green", size = 3, shape = 24) +
geom_point(data = min_felicidad_por_decil, aes(x = decil_alcohol, y = min_felicidad), color = "red", size = 3, shape = 25) +
labs(
x = "Decil",
y = "Índice de felicidad promedio",
title = "Índice de felicidad promedio según decil de consumo de alcohol"
) +
theme_minimal() +
cowplot::theme_cowplot() +
scale_x_continuous(breaks = 0:10) +
theme(
plot.title = element_text(size = 20),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
plot.margin = margin(20, 20, 20, 20)
) +
geom_vline(xintercept = 1:10, linetype = "dashed", color = "gray", linewidth = 0.5) +
geom_hline(yintercept = seq(4, 8, 1), linetype = "dashed", color = "gray", linewidth = 0.5)
grafico_Linea2 <- ggplot(promedio_felicidad_por_decil, aes(x = decil_alcohol, y = promedio_felicidad)) +
geom_line() +
geom_point(data = max_felicidad_por_decil, aes(x = decil_alcohol, y = max_felicidad), color = "green", size = 3, shape = 24) +
geom_point(data = min_felicidad_por_decil, aes(x = decil_alcohol, y = min_felicidad), color = "red", size = 3, shape = 25) +
labs(
x = "Decil",
y = "Índice de felicidad") +
theme_minimal() +
cowplot::theme_cowplot() +
scale_x_continuous(breaks = 0:10) +
scale_y_continuous(breaks = 0:8) +
theme(plot.margin = margin(20, 20, 20, 20)) +
geom_vline(xintercept = 1:10, linetype = "dashed", color = "gray", linewidth = 0.5) +
geom_hline(yintercept = seq(4, 8, 1), linetype = "dashed", color = "gray", linewidth= 0.5)
print(grafico_Linea2)
resumen_felicidad_por_region <- base_datos2 %>%
group_by(Region) %>%
summarize(
Cantidad_Paises = n(),
Promedio_Consumo_Alcohol = round(mean(poblacion_Total_consumo), 2),
Promedio_Índice_de_felicidad = round(mean(indice_de_felicidad), 2),
Varianza_Índice_de_felicidad = round(var(indice_de_felicidad), 2),
Máximo_Índice_de_felicidad = round(max(indice_de_felicidad), 2),
Mínimo_Índice_de_felicidad = round(min(indice_de_felicidad), 2))
print(resumen_felicidad_por_region)
consumo_promedio_por_decil <- base_datos2 %>%
group_by(decil_alcohol) %>%
summarize(Consumo_Promedio_Alcohol = round(mean(poblacion_Total_consumo),2))
print(consumo_promedio_por_decil)
resumen_felicidad_por_decil <- base_datos2 %>%
group_by(decil_alcohol) %>%
summarize(
Promedio = round(mean(indice_de_felicidad),2),
Varianza = round(var(indice_de_felicidad),2),
Máximo = round(max(indice_de_felicidad),2),
Mínimo = round(min(indice_de_felicidad),2))
print(resumen_felicidad_por_decil)
variables_interes <- c("poblacion_Total_consumo", "indice_de_felicidad", "apoyo_social", "esperanza_de_vida_saludable", "libertad_para_toma_de_decisiones", "generosidad", "percepcion_de_corrupcion")
correlacion_spearman <- round(cor(base_datos[variables_interes], method = "spearman"), 2)
print(correlacion_spearman)
print(correlacion_spearman)
regiones_unicas <- c("Europa", "Africa Sub-sahariana", "Asia", "Australia y Oceania", "Norteamerica", "Suramerica", "Centroamerica y el Caribe", "Medio Oriente, Norte de Africa y Gran Arabia")
correlaciones_Regiones <- data.frame(Variable = variables_interes)
for (region in regiones_unicas) {
subset_data <- base_datos[base_datos$Region == region, variables_interes]
correlaciones <- sapply(variables_interes, function(variable) cor(subset_data$poblacion_Total_consumo, subset_data[[variable]], method = "spearman"))
correlaciones_Regiones[region] <- correlaciones}
correlaciones_Regiones[, -1] <- lapply(correlaciones_Regiones[, -1], as.numeric)
correlaciones_Regiones[, -1] <- round(correlaciones_Regiones[, -1], 2)
print(correlaciones_Regiones)
correlaciones_Deciles <- data.frame(Variable = variables_interes)
deciles <- unique(base_datos2$decil_alcohol)
for (decil in deciles) {
subset_data <- base_datos2[base_datos2$decil_alcohol == decil, variables_interes]
correlaciones <- sapply(variables_interes, function(variable) {
cor(subset_data$poblacion_Total_consumo, subset_data[[variable]], method = "spearman")
})
correlaciones_Deciles[, as.character(decil)] <- correlaciones
}
print(correlaciones_Deciles)
set.seed(123) # para que toda las veces que lo corramos obtengamos el mismo boot
bootstrap_distribución_coeficiente <- boot(base_datos[c("poblacion_Total_consumo","indice_de_felicidad")], statistic = function(data, i) {
cor(data[i, "poblacion_Total_consumo"], data[i, "indice_de_felicidad"], method='spearman')}, R = 1000)
bootstrap_distribución_coeficiente$t
dist.coef.correlacion.spear <-   hist(bootstrap_distribución_coeficiente$t, main = "Distribución Bootstrap del coeficiente de correlación de Spearman",
xlab = "Coeficiente de correlación de spearman", col = "lightblue")
