geom_boxplot() + cowplot::theme_cowplot() +  # Agregar el gráfico de caja y bigotes
labs(
y = "Índice de Felicidad",
title = "Caja y Bigotes del Índice de Felicidad del",
subtitle = "Considerando el 30% de los Países con Mayor Consumo de Alcohol"
)
# Mostrar el gráfico de caja y bigotes
print(boxplot_felicidad)
# Variables a analizar
variables_interes <- c("both", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption", "ladder_score")
# Crear una lista para almacenar las matrices de correlación por región
correlation_matrices <- list()
# Bucle para calcular las matrices de correlación por región
for (region in regiones_unicas) {
# Filtrar los datos para la región actual
datos_region <- base_datos %>% filter(Region == region)
# Calcular la matriz de correlación
correlation_matrix <- cor(datos_region[variables_interes])
# Almacenar la matriz de correlación en la lista
correlation_matrices[[region]] <- correlation_matrix
}
# Calcular la matriz de correlación promedio para todas las regiones
correlation_matrix_general <- matrix(NA, nrow = length(variables_interes), ncol = 1)
colnames(correlation_matrix_general) <- c("General")
for (i in seq_along(variables_interes)) {
variable <- variables_interes[i]
region_correlations <- sapply(correlation_matrices, function(mat) mat[1, i])
correlation_matrix_general[i, ] <- mean(region_correlations, na.rm = TRUE)
}
# Regiones
regiones_unicas <- c(
"Europe",
"Sub-Saharan Africa",
"Asia",
"Australia and Oceania",
"North America",
"South America",
"Central America and the Caribbean",
"Middle East, North Africa, and Greater Arabia"
)
# Crear una lista para almacenar las matrices de correlación por región
correlation_matrices <- list()
# Bucle para calcular las matrices de correlación por región
for (region in regiones_unicas) {
# Filtrar los datos para la región actual
datos_region <- base_datos %>% filter(Region == region)
# Calcular la matriz de correlación
correlation_matrix <- cor(datos_region[variables_interes])
# Almacenar la matriz de correlación en la lista
correlation_matrices[[region]] <- correlation_matrix
}
# Bucle para calcular las matrices de correlación por región
for (region in regiones_unicas) {
# Filtrar los datos para la región actual
datos_region <- base_datos %>% filter(region == region)
# Calcular la matriz de correlación
correlation_matrix <- cor(datos_region[variables_interes])
# Almacenar la matriz de correlación en la lista
correlation_matrices[[region]] <- correlation_matrix
}
# Calcular la matriz de correlación promedio para todas las regiones
correlation_matrix_general <- matrix(NA, nrow = length(variables_interes), ncol = 1)
colnames(correlation_matrix_general) <- c("General")
for (i in seq_along(variables_interes)) {
variable <- variables_interes[i]
region_correlations <- sapply(correlation_matrices, function(mat) mat[1, i])
correlation_matrix_general[i, ] <- mean(region_correlations, na.rm = TRUE)
}
# Crear un data frame con las correlaciones para todas las regiones, incluyendo "General"
correlation_data <- data.frame(Variable = variables_interes)
for (region in regiones_unicas) {
region_correlations <- correlation_matrices[[region]][1, ]  # Correlaciones de "both" con todas las variables
correlation_data[, region] <- region_correlations
}
# Agregar la columna "General" al data frame
correlation_data$General <- correlation_matrix_general[, "General"]
# Eliminar la fila correspondiente a "both"
correlation_data <- correlation_data[correlation_data$Variable != "both", ]
# Mover la fila "General" al principio
correlation_data <- correlation_data %>%
arrange(desc(Variable == "General"))
# Mover la fila "ladderscore" al principio
correlation_data <- correlation_data %>%
arrange(desc(Variable == "ladder_score"))
# Nuevos nombres de las variables
nuevos_nombres <- c("Indice de felicidad", "Seguro Social", "Esperanza de vida saludable", "Libertad para la toma de decisiones", "Generosidad","Percepciones de corrupción")
# Cambiar los nombres de las variables
correlation_data <- correlation_data %>%
mutate(Variable = nuevos_nombres)
colnames(correlation_data)[2] <- "Europa"
colnames(correlation_data)[3] <- "Africa Sub-sahariana"
colnames(correlation_data)[5] <- "Australia y OCeanía"
colnames(correlation_data)[6] <- "Norteamérica"
colnames(correlation_data)[7] <- "Suramérica"
colnames(correlation_data)[8] <- "Centroamérica y el Caribe"
colnames(correlation_data)[9] <- "Medio Oriente y N. Africa
"
# Mostrar el data frame actualizado
print(correlation_data)
View(correlation_data)
library(tidyverse)
library(janitor)
library(dplyr)
library(ggplot2)
library(plotly)
library(cowplot)
library(janitor)
library(dplyr)
rm(list = ls())
consumo_alcohol <- read.csv("alcohol-consumption-by-country-2023.csv")
consumo_alcohol <- clean_names(consumo_alcohol)
felicidad <- read.csv("WHR2023.csv")
felicidad <- clean_names(felicidad)
felicidad <- felicidad %>% rename(country = country_name)
# Cambiar "Turkiye" a "Turkey" en el data frame 'felicidad'
felicidad <- felicidad %>%
mutate(country = ifelse(country == "Turkiye", "Turkey", country))
# Cambiar "DR Congo" to "Congo (Brazzaville)" en el data frame 'consumo_alcohol'
consumo_alcohol <- consumo_alcohol %>%
mutate(country = ifelse(country == "DR Congo", "Congo (Brazzaville)", country))
# base de datos unidas
base_datos <- inner_join(consumo_alcohol, felicidad, by = "country")
# Tabla solo la información de consumo de alcohol e índice de felicidad
relacion_AlcoholYFelicidad <- base_datos %>%
select(country, ladder_score, both)
# Crear un gráfico de dispersión entre felicidad y consumo de alcohol promedio
ggplot(base_datos, aes(x = ladder_score, y = both)) +
geom_point() +
labs(x = "Felicidad", y = "Consumo de alcohol", title = "Relación entre felicidad y consumo de alcohol promedio")
# Crear un gráfico de barras horizontales ordenado por ladder_score para hombres
ggplot(base_datos, aes(x = reorder(country, ladder_score), y = male)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Consumo de Alcohol en Hombres", y = "País", title = "Consumo de Alcohol en Hombres por País") +
#theme_minimal() +
coord_flip() +
theme(axis.text.y = element_text(size = 4))
# Crear un gráfico de barras horizontales ordenado por ladder_score para mujeres
ggplot(base_datos, aes(x = reorder(country, ladder_score), y = female)) +
geom_bar(stat = "identity", fill = "red") +
labs(x = "Consumo de Alcohol en mujeres", y = "País", title = "Consumo de Alcohol en Mujeres por País") +
#theme_minimal() +
coord_flip() +
theme(axis.text.y = element_text(size = 4))
# Crear un gráfico de barras horizontales ordenado por ladder_score por país
ggplot(base_datos, aes(x = reorder(country, ladder_score), y = male)) +
geom_bar(stat = "identity", fill = "green") +
labs(x = "Consumo de Alcohol por país", y = "País", title = "Consumo de Alcohol por País") +
#theme_minimal() +
coord_flip() +
theme(axis.text.y = element_text(size = 4))
# Tabla solo la información de consumo de alcohol e índice de felicidad
relacion_AlcoholYFelicidad <- base_datos %>%
select(country, ladder_score, both)
# Create a new column "Region" based on country
relacion_AlcoholYFelicidad <- relacion_AlcoholYFelicidad %>%
mutate(Region = ifelse(
country %in% c(
"Bangladesh", "Bhutan", "Brunei", "Cambodia", "China", "India",
"Indonesia", "Japan", "Kazakhstan", "North Korea", "South Korea",
"Kyrgyzstan", "Laos", "Malaysia", "Maldives", "Mongolia", "Myanmar",
"Nepal", "Philippines", "Singapore", "Sri Lanka", "Taiwan", "Tajikistan",
"Thailand", "Turkmenistan", "Uzbekistan", "Vietnam"
), "Asia",
ifelse(
country %in% c(
"Afghanistan", "Algeria", "Bahrain", "Egypt", "Iran", "Iraq",
"Israel", "Jordan", "Kuwait", "Lebanon", "Libya", "Morocco",
"Oman", "Pakistan", "Qatar", "Saudi Arabia", "Somalia", "Syria",
"Tunisia", "Turkey", "United Arab Emirates", "Yemen"
), "Middle East, North Africa, and Greater Arabia",
ifelse(
country %in% c(
"Albania", "Andorra", "Armenia", "Austria", "Belarus", "Belgium",
"Bosnia and Herzegovina", "Bulgaria", "Croatia", "Cyprus", "Czech Republic",
"Denmark", "Estonia", "Finland", "France", "Georgia", "Germany",
"Greece", "Hungary", "Iceland", "Ireland", "Italy", "Kosovo",
"Latvia", "Liechtenstein", "Lithuania", "Luxembourg", "North Macedonia",
"Malta", "Moldova", "Monaco", "Montenegro", "Netherlands", "Norway",
"Poland", "Portugal", "Romania", "Russia", "San Marino", "Serbia",
"Slovakia", "Slovenia", "Spain", "Sweden", "Switzerland", "Ukraine",
"United Kingdom", "Vatican City"
), "Europe",
ifelse(
country %in% c("Canada", "Greenland", "Mexico", "United States"), "North America",
ifelse(
country %in% c(
"Antigua and Barbuda", "The Bahamas", "Barbados", "Belize", "Costa Rica",
"Cuba", "Dominica", "Dominican Republic", "El Salvador", "Grenada",
"Guatemala", "Haiti", "Honduras", "Jamaica", "Nicaragua", "Panama",
"Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines",
"Trinidad and Tobago"
), "Central America and the Caribbean",
ifelse(
country %in% c(
"Argentina", "Bolivia", "Brazil", "Chile", "Colombia", "Ecuador",
"Guyana", "Paraguay", "Peru", "Suriname", "Uruguay", "Venezuela"
), "South America",
ifelse(
country %in% c(
"Angola", "Benin", "Botswana", "Burkina Faso", "Burundi", "Cameroon",
"Cape Verde", "The Central African Republic", "Chad", "Comoros",
"Republic of the Congo", "Congo (Brazzaville)",
"Ivory Coast", "Djibouti", "Equatorial Guinea", "Eritrea", "Ethiopia",
"Gabon", "Gambia", "Ghana", "Guinea", "Guinea-Bissau", "Kenya",
"Lesotho", "Liberia", "Madagascar", "Malawi", "Mali", "Mauritania",
"Mauritius", "Mozambique", "Namibia", "Niger", "Nigeria", "Rwanda",
"Sao Tome and Principe", "Senegal", "Seychelles", "Sierra Leone",
"South Africa", "South Sudan", "Sudan", "Swaziland", "Tanzania",
"Togo", "Uganda", "Zambia", "Zimbabwe"
), "Sub-Saharan Africa",
ifelse(
country %in% c(
"Australia", "East Timor", "Fiji", "Kiribati", "Marshall Islands",
"The Federated States of Micronesia", "Nauru", "New Zealand", "Palau",
"Papua New Guinea", "Samoa", "Solomon Islands", "Tonga", "Tuvalu",
"Vanuatu"
), "Australia and Oceania",
"Other"
)
)
)
)
)
)
)
))
# Filter the data for the "Europe" region
europe_data <- relacion_AlcoholYFelicidad %>%
filter(Region == "Europe")
scatter_plot <- ggplot(europe_data, aes(x = both, y = ladder_score, label = country)) +
geom_point() +
geom_text(nudge_x = 0.1, nudge_y = 0.1, size = 3) +  # Add text labels
labs(x = "Both", y = "Scorelader", title = "Scatter Plot of Both vs. Scorelader in Europe")
# Convert the ggplot scatter plot to a plotly object
interactive_scatter_plot <- ggplotly(scatter_plot)
# Display the interactive scatter plot
interactive_scatter_plot
# Filter the data for the "Asia" region
asia_data <- relacion_AlcoholYFelicidad %>%
filter(Region == "Asia")
scatter_plot_Asia <- ggplot(asia_data, aes(x = both, y = ladder_score, label = country)) +
geom_point() +
geom_text(nudge_x = 0.1, nudge_y = 0.1, size = 3) +  # Add text labels
labs(x = "Both", y = "Scorelader", title = "Scatter Plot of Both vs. Scorelader in Asia")
# Convert the ggplot scatter plot to a plotly object
interactive_scatter_plot_Asia <- ggplotly(scatter_plot_Asia)
# Display the interactive scatter plot
interactive_scatter_plot_Asia
ajefhhshrbiasrhbgiusrbhbilurh = 1
# Gráfico 1: - Consumo de Alcohol por País, codificado con Escala de Color según Índice de Felicidad
# Para aumentar el tamaño del gráfico
options(repr.plot.width = 4, repr.plot.height = 10)
# Ordenar el data frame por consumo de alcohol de menor a mayor
relacion_AlcoholYFelicidad <- relacion_AlcoholYFelicidad %>%
arrange(both)
# Crear un gráfico de barras horizontales
gráfico_Barras1 <- ggplot(relacion_AlcoholYFelicidad, aes(x = both, y = reorder(country, both), fill = ladder_score)) +
geom_bar(stat = "identity") +
labs(
x = "Consumo de Alcohol",
y = "País",
title = "Consumo de Alcohol por País (Ordenado de mayor a menor)",
subtitle = "Codificado con Escala de Color según Índice de Felicidad",
fill = "Índice de Felicidad"
) +
scale_fill_gradient(low = "red", high = "green") +  # Escala de colores de rojo a verde
theme_minimal() + cowplot::theme_cowplot() + # Aplicar un tema minimalista
theme(axis.text.y = element_text(size = 3, hjust = 0),  # Ajustar el tamaño y alineación del texto en el eje y
plot.title = element_text(size = 8),
plot.subtitle = element_text(size = 7),# Ajustar el tamaño del título
legend.text = element_text(size = 4),  # Ajustar el tamaño del texto en el color key
legend.title = element_text(size = 4)) +  # Ajustar el tamaño del título del color key
guides(fill = guide_colorbar(barwidth = 2, barheight = 6))  # Ajustar el tamaño del color key
# Guardar el gráfico llamado "consumo_MenorAMayor_color"
consumo_MenorAMayor_color <- gráfico_Barras1
# Mostrar el gráfico
print(consumo_MenorAMayor_color)
# Calcular los promedios por región
promedios_region <- relacion_AlcoholYFelicidad %>%
group_by(Region) %>%
summarise(
Promedio_Alcohol = mean(both),
Promedio_Felicidad = mean(ladder_score)
) %>%
arrange(desc(Promedio_Felicidad))  # Ordenar por índice de felicidad promedio de mayor a menor
# Modificacón los nombres de las regiones
promedios_region$Region <- case_when(
promedios_region$Region == "Europe" ~ "Europa",
promedios_region$Region == "Sub-Saharan Africa" ~ "Africa y Africa Sub-sahariana",
promedios_region$Region == "Asia" ~ "Asia",
promedios_region$Region == "Australia and Oceania" ~ "AUS y OCE",
promedios_region$Region == "North America" ~ "Norteamérica",
promedios_region$Region == "South America" ~ "Suramérica",
promedios_region$Region == "Middle East, North Africa, and Greater Arabia" ~ "M. Oriente y  N. África",
promedios_region$Region == "Central America and the Caribbean" ~ "Centroamérica y el Caribe",
TRUE ~ promedios_region$Region  # Mantener otros nombres sin cambios
)
# Crear el gráfico de barras
grafico_promedios <- ggplot(promedios_region, aes(x = reorder(Region, -Promedio_Felicidad), y = Promedio_Alcohol, fill = Promedio_Felicidad)) +
geom_bar(stat = "identity") +
labs(
x = "Región",
y = "Promedio de Consumo de Alcohol",
title = "Promedio de Consumo de Alcohol por Región",
subtitle = "Ordenado por Índice de Felicidad Promedio"
) +
theme_minimal() +
cowplot::theme_cowplot() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.title.x = element_text(size = 10), # Ajustar el tamaño del texto del eje x
axis.title.y = element_text(size = 10),
plot.margin = margin(t = 0, r = 2, b = 0, l = 0, unit = "cm"),  # Aumentar el margen derecho
legend.position = c(0.9, 0.95),  # Colocar la leyenda en la esquina superior derecha
legend.title = element_text(size = 10),  # Tamaño del título de la leyenda
legend.text = element_text(size = 8)  # Tamaño del texto de la leyenda (nombre de la barra de colores)
) +
scale_fill_gradient(low = "red", high = "green", name = "Índice de Felicidad") +
geom_text(aes(label = round(Promedio_Felicidad, 2)), vjust = -0.5, size = 3)  # Agregar etiquetas de promedio de felicidad arriba de las barras
# Mostrar el gráfico
grafico_promedios
# Crear el gráfico
grafico_dispersion <- ggplot(relacion_AlcoholYFelicidad, aes(x = both, y = ladder_score)) +
geom_point() + cowplot::theme_cowplot() +  # Gráfico de dispersión
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Línea de regresión
labs(
x = "Consumo de Alcohol",
y = "Índice de Felicidad",
title = "Gráfico de Dispersión con Línea de Regresión"
)
# Mostrar el gráfico
print(grafico_dispersion)
# Ordenar los datos por consumo de alcohol de mayor a menor
relacion_AlcoholYFelicidad2 <- relacion_AlcoholYFelicidad %>%
arrange(desc(both))
# Calcular el número de países que representa el 30%
n_paises <- nrow(relacion_AlcoholYFelicidad2)
n_paises_30_porcentaje <- round(0.30 * n_paises)
# Seleccionar el 30% superior de países en función del consumo de alcohol
paises_seleccionados <- head(relacion_AlcoholYFelicidad, n_paises_30_porcentaje)
# Crear el gráfico de caja y bigotes del índice de felicidad para los países seleccionados
caja_y_bigotes_felicidad <- ggplot(paises_seleccionados, aes(y = ladder_score)) +
geom_boxplot() + cowplot::theme_cowplot() +  # Agregar el gráfico de caja y bigotes
labs(
y = "Índice de Felicidad",
title = "Caja y Bigotes del Índice de Felicidad del",
subtitle = "Considerando el 30% de los Países con Mayor Consumo de Alcohol"
)
# Mostrar el gráfico de caja y bigotes
print(caja_y_bigotes_felicidad)
pct <- 0.8  # Porcentaje del 80%
top_countries <- relacion_AlcoholYFelicidad %>%
group_by(Region) %>%
arrange(desc(both)) %>%
slice(1:round(n() * pct)) %>%
pull(country)
# Filtrar los datos para incluir solo esos países
filtered_data <- relacion_AlcoholYFelicidad %>%
filter(country %in% top_countries)
# Nuevos nombres de las regiones
nuevos_nombres <- c(
"Europe" = "Europa",
"Sub-Saharan Africa" = "Africa y Africa Sub-sahariana",
"Asia" = "Asia",
"Australia and Oceania" = "AUS y OCE",
"North America" = "Norteamérica",
"South America" = "Suramérica",
"Middle East, North Africa, and Greater Arabia" = "M. Oriente y N. África",
"Central America and the Caribbean" = "Centroamérica y el Caribe"
)
# Cambiar los nombres de las regiones en los datos
filtered_data$Region <- nuevos_nombres[filtered_data$Region]
# Crear el gráfico de caja y bigotes con los nuevos nombres de regiones en el eje x
caja_y_bigotes_region <- ggplot(filtered_data, aes(x = Region, y = ladder_score, fill = Region)) +
geom_boxplot(outlier.color = "red") + cowplot::theme_cowplot() +
labs(
y = "Índice de Felicidad",
title = "Gráfico de Caja y Bigotes del Índice de Felicidad por Región",
subtitle = "Considerando el 80% de países con mayor consumo de alcohol"
) +
theme_minimal() +
scale_fill_discrete(name = "Región") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar el eje x
caja_y_bigotes_region
# Variables a analizar
variables_interes <- c("both", "social_support", "healthy_life_expectancy", "freedom_to_make_life_choices", "generosity", "perceptions_of_corruption", "ladder_score")
# Regiones
regiones_unicas <- c(
"Europe",
"Sub-Saharan Africa",
"Asia",
"Australia and Oceania",
"North America",
"South America",
"Central America and the Caribbean",
"Middle East, North Africa, and Greater Arabia"
)
# Crear una lista para almacenar las matrices de correlación por región
correlacion_matrices <- list()
# Bucle para calcular las matrices de correlación por región
for (region in regiones_unicas) {
# Filtrar los datos para la región actual
datos_region <- base_datos %>% filter(region == region)
# Calcular la matriz de correlación
correlacion_matrix <- cor(datos_region[variables_interes])
# Almacenar la matriz de correlación en la lista
correlacion_matrices[[region]] <- correlacion_matrix
}
# Calcular la matriz de correlación promedio para todas las regiones
correlacion_matrix_general <- matrix(NA, nrow = length(variables_interes), ncol = 1)
colnames(correlacion_matrix_general) <- c("General")
for (i in seq_along(variables_interes)) {
variable <- variables_interes[i]
region_correlacion <- sapply(correlacion_matrices, function(mat) mat[1, i])
correlation_matrix_general[i, ] <- mean(region_correlations, na.rm = TRUE)
}
# Crear un data frame con las correlaciones para todas las regiones, incluyendo "General"
correlacion_datos <- data.frame(Variable = variables_interes)
# Calcular la matriz de correlación promedio para todas las regiones
correlacion_matrix_general <- matrix(NA, nrow = length(variables_interes), ncol = 1)
colnames(correlacion_matrix_general) <- c("General")
for (i in seq_along(variables_interes)) {
variable <- variables_interes[i]
region_correlacion <- sapply(correlacion_matrices, function(mat) mat[1, i])
correlacion_matrix_general[i, ] <- mean(region_correlacion, na.rm = TRUE)
}
# Crear un data frame con las correlaciones para todas las regiones, incluyendo "General"
correlacion_datos <- data.frame(Variable = variables_interes)
for (region in regiones_unicas) {
region_correlacion <- correlacion_matrices[[region]][1, ]  # Correlaciones de "both" con todas las variables
correlacion_data[, region] <- region_correlacion
}
# Crear un data frame con las correlaciones para todas las regiones, incluyendo "General"
correlacion_datos <- data.frame(Variable = variables_interes)
for (region in regiones_unicas) {
region_correlacion <- correlacion_matrices[[region]][1, ]  # Correlaciones de "both" con todas las variables
correlacion_datos[, region] <- region_correlacion
}
# Agregar la columna "General" al data frame
correlation_datos$General <- correlacion_matrix_general[, "General"]
# Agregar la columna "General" al data frame
correlacion_datos$General <- correlacion_matrix_general[, "General"]
# Eliminar la fila correspondiente a "both"
correlacion_datos <- correlacion_datos[correlation_data$Variable != "both", ]
# Eliminar la fila correspondiente a "both"
correlacion_datos <- correlacion_datos[correlacion_datos$Variable != "both", ]
# Mover la fila "General" al principio
correlacion_datos <- correlacion_datos %>%
arrange(desc(Variable == "General"))
# Mover la fila "ladderscore" al principio
correlacion_datos <- correlacion_datos %>%
arrange(desc(Variable == "ladder_score"))
# Nuevos nombres de las variables
nuevos_nombres <- c("Indice de felicidad", "Seguro Social", "Esperanza de vida saludable", "Libertad para la toma de decisiones", "Generosidad","Percepciones de corrupción")
# Cambiar los nombres de las variables
correlacion_datos <- correlacion_datos %>%
mutate(Variable = nuevos_nombres)
colnames(correlacion_datos)[2] <- "Europa"
colnames(correlacion_datos)[3] <- "Africa Sub-sahariana"
colnames(correlacion_datos)[5] <- "Australia y OCeanía"
colnames(correlacion_datos)[6] <- "Norteamérica"
colnames(correlacion_datos)[7] <- "Suramérica"
colnames(correlacion_datos)[8] <- "Centroamérica y el Caribe"
colnames(correlacion_datos)[9] <- "Medio Oriente y N. Africa
"
# Mostrar el data frame actualizado
print(correlacion_datos)
View(correlacion_datos)
library(tidyverse)
library(janitor)
library(dplyr)
library(ggplot2)
library(plotly)
library(cowplot)
consumo_alcohol <- read.csv("alcohol-consumption-by-country-2023.csv")
consumo_alcohol <- clean_names(consumo_alcohol)
felicidad <- read.csv("WHR2023.csv")
felicidad <- clean_names(felicidad)
felicidad <- felicidad %>% rename(country = country_name)
# Cambiar "Turkiye" a "Turkey" en el data frame 'felicidad'
felicidad <- felicidad %>%
mutate(country = ifelse(country == "Turkiye", "Turkey", country))
# Cambiar "DR Congo" to "Congo (Brazzaville)" en el data frame 'consumo_alcohol'
consumo_alcohol <- consumo_alcohol %>%
mutate(country = ifelse(country == "DR Congo", "Congo (Brazzaville)", country))
# base de datos unidas
base_datos <- inner_join(consumo_alcohol, felicidad, by = "country")
# Tabla solo la información de consumo de alcohol e índice de felicidad
relacion_AlcoholYFelicidad <- base_datos %>%
select(country, ladder_score, both)
# Crear un gráfico de dispersión entre felicidad y consumo de alcohol promedio
ggplot(base_datos, aes(x = ladder_score, y = both)) +
geom_point() +
labs(x = "Felicidad", y = "Consumo de alcohol", title = "Relación entre felicidad y consumo de alcohol promedio")
# Crear un gráfico de barras horizontales ordenado por ladder_score para hombres
ggplot(base_datos, aes(x = reorder(country, ladder_score), y = male)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Consumo de Alcohol en Hombres", y = "País", title = "Consumo de Alcohol en Hombres por País") +
#theme_minimal() +
coord_flip() +
theme(axis.text.y = element_text(size = 4))
# Crear un gráfico de barras horizontales ordenado por ladder_score para mujeres
ggplot(base_datos, aes(x = reorder(country, ladder_score), y = female)) +
geom_bar(stat = "identity", fill = "red") +
labs(x = "Consumo de Alcohol en mujeres", y = "País", title = "Consumo de Alcohol en Mujeres por País") +
#theme_minimal() +
coord_flip() +
theme(axis.text.y = element_text(size = 4))
# Mostrar el data frame actualizado
print(correlacion_datos)
# Mostrar el data frame actualizado
print(correlacion_datos)
